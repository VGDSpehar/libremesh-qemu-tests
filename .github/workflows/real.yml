name: Test OpenWrt on real devices
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: "1"
  PYTEST_ADDOPTS: "--color=yes"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test:
    name: Test OpenWrt on ${{ matrix.device }}
    runs-on: global-coordinator
    strategy:
      fail-fast: false
      matrix:
        include:
          # - device: openwrt-one
          #   target: mediatek-filogic
          #   firmware: openwrt-mediatek-filogic-openwrt_one-initramfs.itb

          - device: turris-omnia
            target: mvebu-cortexa9
            firmware: openwrt-mvebu-cortexa9-cznic_turris-omnia-initramfs-kernel.bin
            proxy: labgrid-bastian

          # - device: linksys-e8450
          #   target: mediatek-mt7622
          #   firmware: openwrt-mediatek-mt7622-linksys_e8450-initramfs-kernel.bin

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Download test firmware
        env:
          target: ${{ matrix.target }}
        run: |
          mkdir -p /tmp/tftp/${{ matrix.device }}
          wget https://downloads.openwrt.org/snapshots/targets/${target/-/\/}/${{ matrix.firmware }} \
            --output-document /tmp/tftp/${{ matrix.device }}/${{ matrix.firmware }}

      - name: Set environment variables
        run: |
          echo "LG_IMAGE=/tmp/tftp/${{ matrix.device }}/${{ matrix.firmware }}" >> $GITHUB_ENV
          echo "LG_PROXY=${{ matrix.proxy }}" >> $GITHUB_ENV

      - name: Wait for free device
        run: |
          eval $(uv run labgrid-client reserve --wait --shell device=${{ matrix.device }})
          echo "LG_TOKEN=$LG_TOKEN" >> $GITHUB_ENV
          echo "LG_PLACE=+" >> $GITHUB_ENV
          uv run labgrid-client -p +$LG_TOKEN lock

      - name: Run test
        run: |
          uv run pytest tests/ \
            --lg-env targets/${{ matrix.device }}.yaml \
            --lg-log \
            --lg-colored-steps \
            --log-cli-level=CONSOLE

      - name: Poweroff and unlock device
        if: always()
        run: |
          uv run labgrid-client power off
          uv run labgrid-client unlock

      - name: Show console
        if: always()
        run: cat console_*

      - name: Upload console logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: console-${{ matrix.target }}
          path: console_*

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: results-${{ matrix.target }}
          path: results.json

      - name: Upload report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: report-${{ matrix.target }}
          path: report.json
